{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/AppointmentContainer/AppointmentContainer.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./AppointmentContainer.css\";\nimport axios, { post } from \"axios\";\n\nconst AppointmentContainer = props => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [docLoaded, setDocLoaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [goodUpload, setGoodUpload] = useState(false);\n  const [documents, setDocuments] = useState(null);\n  const fileInput = useRef(null);\n  const patient_id = props.patient_id;\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/patient/get_appointments/${patient_id}`);\n      let appointments = await appointmentQuery.json();\n      appointments.sort((a, b) => new Date(a.diary_date) - new Date(b.diary_date));\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/get_doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getDoctors();\n  }, []);\n  useEffect(() => {\n    async function getUploadedFiles() {\n      try {\n        let response = await fetch(`/get_documents/${patient_id}`);\n        let documents = await response.json();\n        setDocuments(documents);\n        console.log(documents); // setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getUploadedFiles();\n  }, []);\n\n  const getDoctorName = doctor_id => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }, \"Dr. \", doctorList[i].first_name, \" \", doctorList[i].last_name);\n      }\n    }\n  };\n\n  const getDate = appointment => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    var day = dateArray[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, date.join(\"/\"));\n  };\n\n  const getZoomUrl = appointment => {\n    const zoomUrl = appointment.join_url;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: zoomUrl,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \"Click here to begin your appointment\");\n  };\n\n  const deleteAppointment = appointment_id => {\n    fetch(\"/delete_booking\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id\n      })\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const fileHandler = e => {\n    setSelectedFiles(e.target.files[0]);\n  };\n\n  const uploadDocument = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", selectedFiles);\n    const url = `/upload/${patient_id}`;\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }; // return post(url, formData, config);\n\n    post(url, formData, config).then(res => {\n      if (res.status === 201) {\n        setGoodUpload(true);\n      }\n    });\n  };\n\n  const getUploadedFiles = () => {};\n\n  const deleteDocument = doc_id => {\n    fetch(`/delete_document`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        document_id: doc_id\n      })\n    }).then(response => {// if (response.status === 201) {\n      //   setSubmitted(true);\n    });\n  };\n\n  if (ApptLoaded && docLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"patient-appointment-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"Please read carefully\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"If you wish to upload any medical information or images such as X-rays or CAT scans, please do so by clicking the 'Upload Files' button and attaching the files you wish to provide the Practitioner\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"When it is time for your appointment, please click on the link underneath 'Zoom URL' to begin your video appointment.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    })), appointmentList.map(appointment => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"calendar-pic\",\n      src: \"calendar.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, getDate(appointment)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, appointment.time_from, \" - \", appointment.time_to))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Practitioner\"), getDoctorName(appointment.doctor_id)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"Upload Files\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: uploadDocument,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      // style={{ display: \"none\" }}\n      name: \"file\",\n      type: \"file\",\n      multiple: true,\n      onChange: e => fileHandler(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    })), getUploadedFiles), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, \"Zoom URL\"), getZoomUrl(appointment)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, \"Cancel appointment\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        deleteAppointment(appointment.diary_id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, \"Cancel your appointment\")))), /*#__PURE__*/React.createElement(\"iframe\", {\n      name: \"hiddenFrame\",\n      width: \"0\",\n      height: \"0\",\n      border: \"0\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default AppointmentContainer;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/AppointmentContainer/AppointmentContainer.jsx"],"names":["React","useState","useEffect","useRef","axios","post","AppointmentContainer","props","appointmentList","setAppointmentList","doctorList","setDoctorList","ApptLoaded","setApptLoaded","docLoaded","setDocLoaded","selectedFiles","setSelectedFiles","goodUpload","setGoodUpload","documents","setDocuments","fileInput","patient_id","getAppointments","appointmentQuery","fetch","appointments","json","sort","a","b","Date","diary_date","getDoctors","docResponse","doctors","err","console","log","getUploadedFiles","response","getDoctorName","doctor_id","i","length","first_name","last_name","getDate","appointment","dateArray","split","date","slice","day","join","getZoomUrl","zoomUrl","join_url","deleteAppointment","appointment_id","method","headers","Accept","body","JSON","stringify","diary_id","then","window","location","reload","fileHandler","e","target","files","uploadDocument","event","preventDefault","formData","FormData","append","url","config","res","status","deleteDocument","doc_id","document_id","map","time_from","time_to","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,4BAAP;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMqB,SAAS,GAAGnB,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAMoB,UAAU,GAAGhB,KAAK,CAACgB,UAAzB;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAesB,eAAf,GAAiC;AAC/B,UAAIC,gBAAgB,GAAG,MAAMC,KAAK,CAC/B,6BAA4BH,UAAW,EADR,CAAlC;AAGA,UAAII,YAAY,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,EAAzB;AACAD,MAAAA,YAAY,CAACE,IAAb,CACE,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASF,CAAC,CAACG,UAAX,IAAyB,IAAID,IAAJ,CAASD,CAAC,CAACE,UAAX,CADrC;AAGAxB,MAAAA,kBAAkB,CAACkB,YAAD,CAAlB;AACAd,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAEDW,IAAAA,eAAe;AAChB,GAdQ,EAcN,EAdM,CAAT;AAgBAtB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegC,UAAf,GAA4B;AAC1B,UAAI;AACF,YAAIC,WAAW,GAAG,MAAMT,KAAK,CAAC,cAAD,CAA7B;AACA,YAAIU,OAAO,GAAG,MAAMD,WAAW,CAACP,IAAZ,EAApB;AACAjB,QAAAA,aAAa,CAACyB,OAAD,CAAb;AACArB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OALD,CAKE,OAAOsB,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACDH,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT;AAcAhC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAesC,gBAAf,GAAkC;AAChC,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMf,KAAK,CAAE,kBAAiBH,UAAW,EAA9B,CAA1B;AACA,YAAIH,SAAS,GAAG,MAAMqB,QAAQ,CAACb,IAAT,EAAtB;AACAP,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAZ,EAJE,CAKF;AACD,OAND,CAME,OAAOiB,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACDG,IAAAA,gBAAgB;AACjB,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAME,aAAa,GAAIC,SAAD,IAAe;AACnC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlC,UAAU,CAACmC,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAIlC,UAAU,CAACkC,CAAD,CAAV,CAAcD,SAAd,KAA4BA,SAAhC,EAA2C;AACzC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOjC,UAAU,CAACkC,CAAD,CAAV,CAAcE,UADrB,OACkCpC,UAAU,CAACkC,CAAD,CAAV,CAAcG,SADhD,CADF;AAKD;AACF;AACF,GAVD;;AAYA,QAAMC,OAAO,GAAIC,WAAD,IAAiB;AAC/B,UAAMC,SAAS,GAAGD,WAAW,CAAChB,UAAZ,CAAuBkB,KAAvB,CAA6B,GAA7B,CAAlB;AACA,UAAMC,IAAI,GAAGF,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAb;AACA,QAAIC,GAAG,GAAGJ,SAAS,CAAC,CAAD,CAAnB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,IAAI,CAACG,IAAL,CAAU,GAAV,CAAN,CAAP;AACD,GALD;;AAOA,QAAMC,UAAU,GAAIP,WAAD,IAAiB;AAClC,UAAMQ,OAAO,GAAGR,WAAW,CAACS,QAA5B;AACA,wBACE;AAAG,MAAA,IAAI,EAAED,OAAT;AAAkB,MAAA,MAAM,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF;AAKD,GAPD;;AASA,QAAME,iBAAiB,GAAIC,cAAD,IAAoB;AAC5ClC,IAAAA,KAAK,CAAC,iBAAD,EAAoB;AACvBmC,MAAAA,MAAM,EAAE,QADe;AAEvBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFc;AAOvB;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB3C,QAAAA,UAAU,EAAE,CADO;AAEnB4C,QAAAA,QAAQ,EAAEP;AAFS,OAAf;AARiB,KAApB,CAAL,CAYGQ,IAZH,CAYS3B,QAAD,IAAc;AACpB4B,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAdD;AAeD,GAhBD;;AAkBA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBxD,IAAAA,gBAAgB,CAACwD,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAhB;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBjE,aAAxB;AAEA,UAAMkE,GAAG,GAAI,WAAU3D,UAAW,EAAlC;AACA,UAAM4D,MAAM,GAAG;AACbrB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf,CANgC,CAYhC;;AAEAzD,IAAAA,IAAI,CAAC6E,GAAD,EAAMH,QAAN,EAAgBI,MAAhB,CAAJ,CAA4Bf,IAA5B,CAAkCgB,GAAD,IAAS;AACxC,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBlE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,KAJD;AAKD,GAnBD;;AAqBA,QAAMqB,gBAAgB,GAAG,MAAM,CAAE,CAAjC;;AAEA,QAAM8C,cAAc,GAAIC,MAAD,IAAY;AACjC7D,IAAAA,KAAK,CAAE,kBAAF,EAAqB;AACxBmC,MAAAA,MAAM,EAAE,QADgB;AAExBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFe;AAMxBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBsB,QAAAA,WAAW,EAAED;AADM,OAAf;AANkB,KAArB,CAAL,CASGnB,IATH,CASS3B,QAAD,IAAc,CACpB;AACA;AACD,KAZD;AAaD,GAdD;;AAgBA,MAAI7B,UAAU,IAAIE,SAAlB,EAA6B;AAC3B,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8MAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+HARF,CADF,eAcE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF,EAkBGN,eAAe,CAACiF,GAAhB,CAAqBxC,WAAD,iBACnB;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACC,WAAD,CAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WAAW,CAACyC,SADf,SAC6BzC,WAAW,CAAC0C,OADzC,CAFF,CAFF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGjD,aAAa,CAACO,WAAW,CAACN,SAAb,CAFhB,CAVF,eAcE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,MAAA,QAAQ,EAAEiC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE;AACA,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,EAAGH,CAAD,IAAOD,WAAW,CAACC,CAAD,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAFF,EAYGjC,gBAZH,CAdF,eA4BE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGgB,UAAU,CAACP,WAAD,CAFb,CA5BF,eAgCE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACbU,QAAAA,iBAAiB,CAACV,WAAW,CAACkB,QAAb,CAAjB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CAhCF,CADD,CAlBH,eA+DE;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,KAAK,EAAC,GAFR;AAGE,MAAA,MAAM,EAAC,GAHT;AAIE,MAAA,MAAM,EAAC,GAJT;AAKE,MAAA,KAAK,EAAE;AAAEyB,QAAAA,OAAO,EAAE;AAAX,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/DF,CADF;AAyED,GA1ED,MA0EO;AACL,wBAAO,yCAAP;AACD;AACF,CAhOD;;AAkOA,eAAetF,oBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./AppointmentContainer.css\";\nimport axios, { post } from \"axios\";\n\nconst AppointmentContainer = (props) => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [docLoaded, setDocLoaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [goodUpload, setGoodUpload] = useState(false);\n  const [documents, setDocuments] = useState(null);\n\n  const fileInput = useRef(null);\n\n  const patient_id = props.patient_id;\n\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(\n        `/patient/get_appointments/${patient_id}`\n      );\n      let appointments = await appointmentQuery.json();\n      appointments.sort(\n        (a, b) => new Date(a.diary_date) - new Date(b.diary_date)\n      );\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/get_doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getDoctors();\n  }, []);\n\n  useEffect(() => {\n    async function getUploadedFiles() {\n      try {\n        let response = await fetch(`/get_documents/${patient_id}`);\n        let documents = await response.json();\n        setDocuments(documents);\n        console.log(documents);\n        // setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getUploadedFiles();\n  }, []);\n\n  const getDoctorName = (doctor_id) => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return (\n          <h3>\n            Dr. {doctorList[i].first_name} {doctorList[i].last_name}\n          </h3>\n        );\n      }\n    }\n  };\n\n  const getDate = (appointment) => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    var day = dateArray[0];\n    return <div>{date.join(\"/\")}</div>;\n  };\n\n  const getZoomUrl = (appointment) => {\n    const zoomUrl = appointment.join_url;\n    return (\n      <a href={zoomUrl} target=\"_blank\">\n        Click here to begin your appointment\n      </a>\n    );\n  };\n\n  const deleteAppointment = (appointment_id) => {\n    fetch(\"/delete_booking\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id,\n      }),\n    }).then((response) => {\n      window.location.reload();\n    });\n  };\n\n  const fileHandler = (e) => {\n    setSelectedFiles(e.target.files[0]);\n  };\n\n  const uploadDocument = (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", selectedFiles);\n\n    const url = `/upload/${patient_id}`;\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    // return post(url, formData, config);\n\n    post(url, formData, config).then((res) => {\n      if (res.status === 201) {\n        setGoodUpload(true);\n      }\n    });\n  };\n\n  const getUploadedFiles = () => {};\n\n  const deleteDocument = (doc_id) => {\n    fetch(`/delete_document`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        document_id: doc_id,\n      }),\n    }).then((response) => {\n      // if (response.status === 201) {\n      //   setSubmitted(true);\n    });\n  };\n\n  if (ApptLoaded && docLoaded) {\n    return (\n      <div className=\"appointment-list\">\n        <div className=\"intro-container\">\n          <div className=\"patient-appointment-intro\">\n            <h2>Please read carefully</h2>\n            <p>\n              If you wish to upload any medical information or images such as\n              X-rays or CAT scans, please do so by clicking the 'Upload Files'\n              button and attaching the files you wish to provide the\n              Practitioner\n            </p>\n            <p>\n              When it is time for your appointment, please click on the link\n              underneath 'Zoom URL' to begin your video appointment.\n            </p>\n          </div>\n          <div className=\"file-list\"></div>\n        </div>\n\n        {appointmentList.map((appointment) => (\n          <div className=\"appointment-container\">\n            <div className=\"calendar-container\">\n              <img className=\"calendar-pic\" src=\"calendar.png\"></img>\n              <div className=\"appointment-box\">\n                <h2>{getDate(appointment)}</h2>\n                <h3>\n                  {appointment.time_from} - {appointment.time_to}\n                </h3>\n              </div>\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Practitioner</h2>\n              {getDoctorName(appointment.doctor_id)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Upload Files</h2>\n              <form onSubmit={uploadDocument}>\n                <input\n                  // style={{ display: \"none\" }}\n                  name=\"file\"\n                  type=\"file\"\n                  multiple\n                  onChange={(e) => fileHandler(e)}\n                ></input>\n                <input type=\"submit\" value=\"Submit\" />\n              </form>\n              {getUploadedFiles}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Zoom URL</h2>\n              {getZoomUrl(appointment)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Cancel appointment</h2>\n              <button\n                onClick={() => {\n                  deleteAppointment(appointment.diary_id);\n                }}\n              >\n                Cancel your appointment\n              </button>\n            </div>\n          </div>\n        ))}\n        <iframe\n          name=\"hiddenFrame\"\n          width=\"0\"\n          height=\"0\"\n          border=\"0\"\n          style={{ display: \"none\" }}\n        ></iframe>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default AppointmentContainer;\n"]},"metadata":{},"sourceType":"module"}