{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/AppointmentContainer/AppointmentContainer.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./AppointmentContainer.css\";\nimport DoctorList from \"../DoctorList/DoctorList\";\n\nconst AppointmentContainer = props => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [docLoaded, setDocLoaded] = useState(false);\n  const patient_id = props.patient_id;\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/get_appointments/${patient_id}/`);\n      let appointments = await appointmentQuery.json();\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/get_doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getDoctors();\n  }, []);\n\n  const getDoctorName = doctor_id => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, \"Dr. \", doctorList[i].first_name, \" \", doctorList[i].last_name);\n      }\n    }\n  };\n\n  const getDate = appointment => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    var day = dateArray[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, date.join(\"/\"));\n  };\n\n  const deleteAppointment = appointment_id => {\n    console.log(appointment_id);\n  };\n\n  if (ApptLoaded && docLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Here are your upcoming appointments ya bish\"), appointmentList.map(appointment => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"calendar-pic\",\n      src: \"calendar.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Date and Time\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, getDate(appointment)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, appointment.time_from, \" - \", appointment.time_to))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Practitioner\"), getDoctorName(appointment.doctor_id)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Cancel appointment\"), /*#__PURE__*/React.createElement(\"button\", {\n      onclick: \"deleteAppointment(appointment.diary_id)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Cancel your appointment\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default AppointmentContainer;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/AppointmentContainer/AppointmentContainer.jsx"],"names":["React","useState","useEffect","DoctorList","AppointmentContainer","props","appointmentList","setAppointmentList","doctorList","setDoctorList","ApptLoaded","setApptLoaded","docLoaded","setDocLoaded","patient_id","getAppointments","appointmentQuery","fetch","appointments","json","getDoctors","docResponse","doctors","err","console","log","getDoctorName","doctor_id","i","length","first_name","last_name","getDate","appointment","dateArray","diary_date","split","date","slice","day","join","deleteAppointment","appointment_id","map","time_from","time_to"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./AppointmentContainer.css\";\nimport DoctorList from \"../DoctorList/DoctorList\";\n\nconst AppointmentContainer = (props) => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n\n  const [docLoaded, setDocLoaded] = useState(false);\n\n  const patient_id = props.patient_id;\n\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/get_appointments/${patient_id}/`);\n      let appointments = await appointmentQuery.json();\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/get_doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getDoctors();\n  }, []);\n\n  const getDoctorName = (doctor_id) => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return (\n          <div>\n            Dr. {doctorList[i].first_name} {doctorList[i].last_name}\n          </div>\n        );\n      }\n    }\n  };\n\n  const getDate = (appointment) => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    var day = dateArray[0];\n    return <div>{date.join(\"/\")}</div>;\n  };\n\n  const deleteAppointment = (appointment_id) => {\n    console.log(appointment_id);\n  };\n\n  if (ApptLoaded && docLoaded) {\n    return (\n      <div className=\"appointment-list\">\n        <h3>Here are your upcoming appointments ya bish</h3>\n        {appointmentList.map((appointment) => (\n          <div className=\"appointment-container\">\n            <div className=\"calendar-container\">\n              <img className=\"calendar-pic\" src=\"calendar.png\"></img>\n              <div className=\"time-details\">\n                <h2>Date and Time</h2>\n                <p>{getDate(appointment)}</p>\n                <p>\n                  {appointment.time_from} - {appointment.time_to}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"appointment-box\">\n              <h2>Practitioner</h2>\n              {getDoctorName(appointment.doctor_id)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Cancel appointment</h2>\n              <button onclick=\"deleteAppointment(appointment.diary_id)\">\n                Cancel your appointment\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default AppointmentContainer;\n"]},"metadata":{},"sourceType":"module"}