{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/pages/PatientPage/patient.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport Header from \"../../Components/Header/Header\";\nimport Intro from \"../../Components/Intro/Intro\";\nimport DoctorList from \"../../Components/DoctorList/DoctorList\";\nimport { render } from \"@testing-library/react\";\n\nconst PatientPage = () => {\n  const [doctorList, setDoctorList] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/get_doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setIsLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getDoctors();\n  }, []); // const renderDoctors = (doctorList) => {\n  //   if (doctorList) {\n  //     doctorList.map((doctor) => (\n  //       // <DoctorList firstName={doctor.first_name}></DoctorList>\n  //     ));\n  //   }\n  // };\n\n  if (isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      portal: \"Patient Portal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Intro, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), doctorList.map(doctor => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, doctor.first_name)), /*#__PURE__*/React.createElement(DoctorList, {\n      firstName: \"Adam\",\n      lastName: \"Golding\",\n      id: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DoctorList, {\n      firstName: \"Horace\",\n      lastName: \"Pang\",\n      id: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DoctorList, {\n      firstName: \"Yash\",\n      lastName: \"Diwan\",\n      id: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DoctorList, {\n      firstName: \"William\",\n      lastName: \"Ling\",\n      id: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n};\n\nexport default PatientPage;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/pages/PatientPage/patient.jsx"],"names":["React","useState","useEffect","Header","Intro","DoctorList","render","PatientPage","doctorList","setDoctorList","isLoaded","setIsLoaded","getDoctors","docResponse","fetch","doctors","json","err","console","log","map","doctor","first_name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,UAAf,GAA4B;AAC1B,UAAI;AACF,YAAIC,WAAW,GAAG,MAAMC,KAAK,CAAC,cAAD,CAA7B;AACA,YAAIC,OAAO,GAAG,MAAMF,WAAW,CAACG,IAAZ,EAApB;AACAP,QAAAA,aAAa,CAACM,OAAD,CAAb;AACAJ,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OALD,CAKE,OAAOM,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACDL,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT,CAJwB,CAkBxB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIF,QAAJ,EAAc;AACZ,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGF,UAAU,CAACY,GAAX,CAAgBC,MAAD,iBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,MAAM,CAACC,UAAb,CADD,CAHH,eAME,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,QAAQ,EAAC,SAAtC;AAAgD,MAAA,EAAE,EAAC,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,QAAtB;AAA+B,MAAA,QAAQ,EAAC,MAAxC;AAA+C,MAAA,EAAE,EAAC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,QAAQ,EAAC,OAAtC;AAA8C,MAAA,EAAE,EAAC,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAgC,MAAA,QAAQ,EAAC,MAAzC;AAAgD,MAAA,EAAE,EAAC,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAgBD,GAjBD,MAiBO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;AACF,CA7CD;;AA+CA,eAAef,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport Header from \"../../Components/Header/Header\";\nimport Intro from \"../../Components/Intro/Intro\";\nimport DoctorList from \"../../Components/DoctorList/DoctorList\";\nimport { render } from \"@testing-library/react\";\n\nconst PatientPage = () => {\n  const [doctorList, setDoctorList] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/get_doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setIsLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getDoctors();\n  }, []);\n\n  // const renderDoctors = (doctorList) => {\n  //   if (doctorList) {\n  //     doctorList.map((doctor) => (\n  //       // <DoctorList firstName={doctor.first_name}></DoctorList>\n  //     ));\n  //   }\n  // };\n  if (isLoaded) {\n    return (\n      <div className=\"App\">\n        <Header portal=\"Patient Portal\"></Header>\n        <Intro></Intro>\n        {doctorList.map((doctor) => (\n          <div>{doctor.first_name}</div>\n        ))}\n        <DoctorList firstName=\"Adam\" lastName=\"Golding\" id=\"1\"></DoctorList>\n        <DoctorList firstName=\"Horace\" lastName=\"Pang\" id=\"4\"></DoctorList>\n        <DoctorList firstName=\"Yash\" lastName=\"Diwan\" id=\"3\"></DoctorList>\n        <DoctorList firstName=\"William\" lastName=\"Ling\" id=\"2\"></DoctorList>\n\n        {/* <button>Log in as Patient</button>\n          <button>Log in as Docotr</button> */}\n      </div>\n    );\n  } else {\n    return <div>Loading</div>;\n  }\n};\n\nexport default PatientPage;\n"]},"metadata":{},"sourceType":"module"}