{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _times from \"lodash/times\";\nimport _invoke from \"lodash/invoke\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ModernAutoControlledComponent as Component, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport RatingIcon from './RatingIcon';\n/**\n * A rating indicates user interest in content.\n */\n\nvar Rating = /*#__PURE__*/function (_Component) {\n  _inherits(Rating, _Component);\n\n  function Rating() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Rating);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Rating)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIconClick\", function (e, _ref) {\n      var index = _ref.index;\n      var _this$props = _this.props,\n          clearable = _this$props.clearable,\n          disabled = _this$props.disabled,\n          maxRating = _this$props.maxRating,\n          onRate = _this$props.onRate;\n      var rating = _this.state.rating;\n      if (disabled) return; // default newRating is the clicked icon\n      // allow toggling a binary rating\n      // allow clearing ratings\n\n      var newRating = index + 1;\n\n      if (clearable === 'auto' && maxRating === 1) {\n        newRating = +!rating;\n      } else if (clearable === true && newRating === rating) {\n        newRating = 0;\n      } // set rating\n\n\n      _this.setState({\n        rating: newRating,\n        isSelecting: false\n      });\n\n      if (onRate) onRate(e, _objectSpread({}, _this.props, {\n        rating: newRating\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIconMouseEnter\", function (e, _ref2) {\n      var index = _ref2.index;\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: index,\n        isSelecting: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onMouseLeave'].concat(args));\n\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: -1,\n        isSelecting: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Rating, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          disabled = _this$props2.disabled,\n          icon = _this$props2.icon,\n          maxRating = _this$props2.maxRating,\n          size = _this$props2.size;\n      var _this$state = this.state,\n          rating = _this$state.rating,\n          selectedIndex = _this$state.selectedIndex,\n          isSelecting = _this$state.isSelecting;\n      var classes = cx('ui', icon, size, useKeyOnly(disabled, 'disabled'), useKeyOnly(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);\n      var rest = getUnhandledProps(Rating, this.props);\n      var ElementType = getElementType(Rating, this.props);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        role: \"radiogroup\",\n        onMouseLeave: this.handleMouseLeave,\n        tabIndex: disabled ? 0 : -1\n      }), _times(maxRating, function (i) {\n        return React.createElement(RatingIcon, {\n          tabIndex: disabled ? -1 : 0,\n          active: rating >= i + 1,\n          \"aria-checked\": rating === i + 1,\n          \"aria-posinset\": i + 1,\n          \"aria-setsize\": maxRating,\n          index: i,\n          key: i,\n          onClick: _this2.handleIconClick,\n          onMouseEnter: _this2.handleIconMouseEnter,\n          selected: selectedIndex >= i && isSelecting\n        });\n      }));\n    }\n  }]);\n\n  return Rating;\n}(Component);\n\n_defineProperty(Rating, \"autoControlledProps\", ['rating']);\n\n_defineProperty(Rating, \"defaultProps\", {\n  clearable: 'auto',\n  maxRating: 1\n});\n\n_defineProperty(Rating, \"Icon\", RatingIcon);\n\n_defineProperty(Rating, \"handledProps\", [\"as\", \"className\", \"clearable\", \"defaultRating\", \"disabled\", \"icon\", \"maxRating\", \"onRate\", \"rating\", \"size\"]);\n\nexport { Rating as default };\nRating.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * You can clear the rating by clicking on the current start rating.\n   * By default a rating will be only clearable if there is 1 icon.\n   * Setting to `true`/`false` will allow or disallow a user to clear their rating.\n   */\n  clearable: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n\n  /** The initial rating value. */\n  defaultRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** You can disable or enable interactive rating.  Makes a read-only rating. */\n  disabled: PropTypes.bool,\n\n  /** A rating can use a set of star or heart icons. */\n  icon: PropTypes.oneOf(['star', 'heart']),\n\n  /** The total number of icons. */\n  maxRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called after user selects a new rating.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed rating.\n   */\n  onRate: PropTypes.func,\n\n  /** The current number of active icons. */\n  rating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium', 'big'))\n} : {};","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/node_modules/semantic-ui-react/dist/es/modules/Rating/Rating.js"],"names":["_extends","_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_times","_invoke","_without","cx","PropTypes","React","ModernAutoControlledComponent","Component","getElementType","getUnhandledProps","SUI","useKeyOnly","RatingIcon","Rating","_Component","_getPrototypeOf2","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","e","_ref","index","_this$props","props","clearable","disabled","maxRating","onRate","rating","state","newRating","setState","isSelecting","_ref2","selectedIndex","_len2","args","_key2","key","value","render","_this2","_this$props2","className","icon","size","_this$state","classes","rest","ElementType","createElement","role","onMouseLeave","handleMouseLeave","tabIndex","i","active","onClick","handleIconClick","onMouseEnter","handleIconMouseEnter","selected","default","propTypes","process","env","NODE_ENV","as","elementType","string","oneOfType","bool","oneOf","defaultRating","number","func","SIZES"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _times from \"lodash/times\";\nimport _invoke from \"lodash/invoke\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ModernAutoControlledComponent as Component, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport RatingIcon from './RatingIcon';\n/**\n * A rating indicates user interest in content.\n */\n\nvar Rating =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Rating, _Component);\n\n  function Rating() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Rating);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Rating)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIconClick\", function (e, _ref) {\n      var index = _ref.index;\n      var _this$props = _this.props,\n          clearable = _this$props.clearable,\n          disabled = _this$props.disabled,\n          maxRating = _this$props.maxRating,\n          onRate = _this$props.onRate;\n      var rating = _this.state.rating;\n      if (disabled) return; // default newRating is the clicked icon\n      // allow toggling a binary rating\n      // allow clearing ratings\n\n      var newRating = index + 1;\n\n      if (clearable === 'auto' && maxRating === 1) {\n        newRating = +!rating;\n      } else if (clearable === true && newRating === rating) {\n        newRating = 0;\n      } // set rating\n\n\n      _this.setState({\n        rating: newRating,\n        isSelecting: false\n      });\n\n      if (onRate) onRate(e, _objectSpread({}, _this.props, {\n        rating: newRating\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIconMouseEnter\", function (e, _ref2) {\n      var index = _ref2.index;\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: index,\n        isSelecting: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onMouseLeave'].concat(args));\n\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: -1,\n        isSelecting: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Rating, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          disabled = _this$props2.disabled,\n          icon = _this$props2.icon,\n          maxRating = _this$props2.maxRating,\n          size = _this$props2.size;\n      var _this$state = this.state,\n          rating = _this$state.rating,\n          selectedIndex = _this$state.selectedIndex,\n          isSelecting = _this$state.isSelecting;\n      var classes = cx('ui', icon, size, useKeyOnly(disabled, 'disabled'), useKeyOnly(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);\n      var rest = getUnhandledProps(Rating, this.props);\n      var ElementType = getElementType(Rating, this.props);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        role: \"radiogroup\",\n        onMouseLeave: this.handleMouseLeave,\n        tabIndex: disabled ? 0 : -1\n      }), _times(maxRating, function (i) {\n        return React.createElement(RatingIcon, {\n          tabIndex: disabled ? -1 : 0,\n          active: rating >= i + 1,\n          \"aria-checked\": rating === i + 1,\n          \"aria-posinset\": i + 1,\n          \"aria-setsize\": maxRating,\n          index: i,\n          key: i,\n          onClick: _this2.handleIconClick,\n          onMouseEnter: _this2.handleIconMouseEnter,\n          selected: selectedIndex >= i && isSelecting\n        });\n      }));\n    }\n  }]);\n\n  return Rating;\n}(Component);\n\n_defineProperty(Rating, \"autoControlledProps\", ['rating']);\n\n_defineProperty(Rating, \"defaultProps\", {\n  clearable: 'auto',\n  maxRating: 1\n});\n\n_defineProperty(Rating, \"Icon\", RatingIcon);\n\n_defineProperty(Rating, \"handledProps\", [\"as\", \"className\", \"clearable\", \"defaultRating\", \"disabled\", \"icon\", \"maxRating\", \"onRate\", \"rating\", \"size\"]);\n\nexport { Rating as default };\nRating.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * You can clear the rating by clicking on the current start rating.\n   * By default a rating will be only clearable if there is 1 icon.\n   * Setting to `true`/`false` will allow or disallow a user to clear their rating.\n   */\n  clearable: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n\n  /** The initial rating value. */\n  defaultRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** You can disable or enable interactive rating.  Makes a read-only rating. */\n  disabled: PropTypes.bool,\n\n  /** A rating can use a set of star or heart icons. */\n  icon: PropTypes.oneOf(['star', 'heart']),\n\n  /** The total number of icons. */\n  maxRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called after user selects a new rating.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed rating.\n   */\n  onRate: PropTypes.func,\n\n  /** The current number of active icons. */\n  rating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium', 'big'))\n} : {};"]},"metadata":{},"sourceType":"module"}