{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/AppointmentContainer/AppointmentContainer.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./AppointmentContainer.css\";\nimport { post } from \"axios\";\n\nconst AppointmentContainer = props => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [docLoaded, setDocLoaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState(null);\n  const [documentLoaded, setDocumentLoaded] = useState(false);\n  const patient_id = props.patient_id;\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/appointment/patient/${patient_id}`);\n      let appointments = await appointmentQuery.json();\n      appointments.sort((a, b) => new Date(a.diary_date) - new Date(b.diary_date));\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getDoctors();\n  }, []);\n  useEffect(() => {\n    async function getUploadedFiles() {\n      try {\n        let response = await fetch(`/file/patient/${patient_id}`);\n        let documents = await response.json();\n        setDocuments(documents);\n        console.log(documents);\n        setDocumentLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getUploadedFiles();\n  }, []);\n\n  const getDoctorName = doctor_id => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }, \"Dr. \", doctorList[i].first_name, \" \", doctorList[i].last_name);\n      }\n    }\n  };\n\n  const getDate = appointment => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    }, date.join(\"/\"));\n  };\n\n  const getZoomUrl = appointment => {\n    const zoomUrl = appointment.join_url;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: zoomUrl,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"Click here to begin your appointment\");\n  };\n\n  const deleteAppointment = appointment_id => {\n    fetch(\"/appointment\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id\n      })\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const fileHandler = e => {\n    setSelectedFiles(e.target.files[0]);\n  };\n\n  const uploadDocument = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", selectedFiles);\n    const url = `/file/patient/${patient_id}`;\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    post(url, formData, config).then(res => {\n      if (res.status === 201) {\n        window.location.reload();\n      }\n    });\n  };\n\n  const deleteDocument = doc_id => {\n    fetch(`/delete_document`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        document_id: doc_id\n      })\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  const downloadDocument = doc_id => {\n    fetch(`/file/${doc_id}`).then(res => window.open(res.url));\n  };\n\n  if (ApptLoaded && docLoaded && documentLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"patient-appointment-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Please read carefully\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"If you wish to upload any medical information or images such as X-rays or CAT scans, please do so by clicking the 'Upload Files' button and attaching the files you wish to provide the Practitioner. Ensure that your files are aptly named to represent what they are.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"When it is time for your appointment, please click on the link underneath 'Zoom URL' to begin your video consultation.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"Upload Files\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: uploadDocument,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"file\",\n      type: \"file\",\n      onChange: e => fileHandler(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }))), documents.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"doc-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, \"Your Uploaded Documents\"), documents.map(doc => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"doc-link\",\n      onClick: () => downloadDocument(doc.document_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, doc.file_name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteDocument(doc.document_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, \"Delete\"))))), appointmentList.map(appointment => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"calendar-pic\",\n      src: \"calendar.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, getDate(appointment)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, appointment.time_from, \" - \", appointment.time_to))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, \"Practitioner\"), getDoctorName(appointment.doctor_id)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, \"Zoom URL\"), getZoomUrl(appointment)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, \"Cancel appointment\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        deleteAppointment(appointment.diary_id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Cancel your appointment\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default AppointmentContainer;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/AppointmentContainer/AppointmentContainer.jsx"],"names":["React","useState","useEffect","useRef","post","AppointmentContainer","props","appointmentList","setAppointmentList","doctorList","setDoctorList","ApptLoaded","setApptLoaded","docLoaded","setDocLoaded","selectedFiles","setSelectedFiles","documents","setDocuments","documentLoaded","setDocumentLoaded","patient_id","getAppointments","appointmentQuery","fetch","appointments","json","sort","a","b","Date","diary_date","getDoctors","docResponse","doctors","err","console","log","getUploadedFiles","response","getDoctorName","doctor_id","i","length","first_name","last_name","getDate","appointment","dateArray","split","date","slice","join","getZoomUrl","zoomUrl","join_url","deleteAppointment","appointment_id","method","headers","Accept","body","JSON","stringify","diary_id","then","window","location","reload","fileHandler","e","target","files","uploadDocument","event","preventDefault","formData","FormData","append","url","config","res","status","deleteDocument","doc_id","document_id","downloadDocument","open","map","doc","file_name","time_from","time_to"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./AppointmentContainer.css\";\nimport { post } from \"axios\";\n\nconst AppointmentContainer = (props) => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [docLoaded, setDocLoaded] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState(null);\n  const [documentLoaded, setDocumentLoaded] = useState(false);\n\n  const patient_id = props.patient_id;\n\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/appointment/patient/${patient_id}`);\n      let appointments = await appointmentQuery.json();\n      appointments.sort(\n        (a, b) => new Date(a.diary_date) - new Date(b.diary_date)\n      );\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n\n  useEffect(() => {\n    async function getDoctors() {\n      try {\n        let docResponse = await fetch(\"/doctors\");\n        let doctors = await docResponse.json();\n        setDoctorList(doctors);\n        setDocLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getDoctors();\n  }, []);\n\n  useEffect(() => {\n    async function getUploadedFiles() {\n      try {\n        let response = await fetch(`/file/patient/${patient_id}`);\n        let documents = await response.json();\n        setDocuments(documents);\n        console.log(documents);\n        setDocumentLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getUploadedFiles();\n  }, []);\n\n  const getDoctorName = (doctor_id) => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return (\n          <h3>\n            Dr. {doctorList[i].first_name} {doctorList[i].last_name}\n          </h3>\n        );\n      }\n    }\n  };\n\n  const getDate = (appointment) => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    return <div>{date.join(\"/\")}</div>;\n  };\n\n  const getZoomUrl = (appointment) => {\n    const zoomUrl = appointment.join_url;\n    return (\n      <a href={zoomUrl} target=\"_blank\">\n        Click here to begin your appointment\n      </a>\n    );\n  };\n\n  const deleteAppointment = (appointment_id) => {\n    fetch(\"/appointment\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id,\n      }),\n    }).then((response) => {\n      window.location.reload();\n    });\n  };\n\n  const fileHandler = (e) => {\n    setSelectedFiles(e.target.files[0]);\n  };\n\n  const uploadDocument = (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", selectedFiles);\n    const url = `/file/patient/${patient_id}`;\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    post(url, formData, config).then((res) => {\n      if (res.status === 201) {\n        window.location.reload();\n      }\n    });\n  };\n\n  const deleteDocument = (doc_id) => {\n    fetch(`/delete_document`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        document_id: doc_id,\n      }),\n    }).then((response) => {\n      window.location.reload();\n    });\n  };\n\n  const downloadDocument = (doc_id) => {\n    fetch(`/file/${doc_id}`).then((res) => window.open(res.url));\n  };\n\n  if (ApptLoaded && docLoaded && documentLoaded) {\n    return (\n      <div className=\"appointment-list\">\n        <div className=\"intro-container\">\n          <div className=\"patient-appointment-intro\">\n            <h2>Please read carefully</h2>\n            <p>\n              If you wish to upload any medical information or images such as\n              X-rays or CAT scans, please do so by clicking the 'Upload Files'\n              button and attaching the files you wish to provide the\n              Practitioner. Ensure that your files are aptly named to represent\n              what they are.\n            </p>\n            <p>\n              When it is time for your appointment, please click on the link\n              underneath 'Zoom URL' to begin your video consultation.\n            </p>\n          </div>\n          <div className=\"appointment-box\">\n            <h2>Upload Files</h2>\n            <form onSubmit={uploadDocument}>\n              <input\n                name=\"file\"\n                type=\"file\"\n                onChange={(e) => fileHandler(e)}\n              ></input>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </div>\n          {documents.length > 0 && (\n            <div className=\"doc-container\">\n              <h2>Your Uploaded Documents</h2>\n              {documents.map((doc) => (\n                <div className=\"file-list\">\n                  <div\n                    id=\"doc-link\"\n                    onClick={() => downloadDocument(doc.document_id)}\n                  >\n                    {doc.file_name}\n                  </div>\n                  <button onClick={() => deleteDocument(doc.document_id)}>\n                    Delete\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {appointmentList.map((appointment) => (\n          <div className=\"appointment-container\">\n            <div className=\"calendar-container\">\n              <img className=\"calendar-pic\" src=\"calendar.png\"></img>\n              <div className=\"appointment-box\">\n                <h2>{getDate(appointment)}</h2>\n                <h3>\n                  {appointment.time_from} - {appointment.time_to}\n                </h3>\n              </div>\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Practitioner</h2>\n              {getDoctorName(appointment.doctor_id)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Zoom URL</h2>\n              {getZoomUrl(appointment)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Cancel appointment</h2>\n              <button\n                onClick={() => {\n                  deleteAppointment(appointment.diary_id);\n                }}\n              >\n                Cancel your appointment\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default AppointmentContainer;\n"]},"metadata":{},"sourceType":"module"}