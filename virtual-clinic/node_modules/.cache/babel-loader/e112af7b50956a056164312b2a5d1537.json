{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/BookingContainer/BookingContainer.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./BookingContainer.css\";\nimport TimeDropdown from \"../TimeDropdown/TimeDropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DropdownContainer = props => {\n  const {\n    doctor_id,\n    user,\n    doctor_name\n  } = props;\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [diaryId, setDiaryId] = useState(null); // Setting Date\n\n  var today_date = new Date();\n  var dateInAWeek = new Date();\n  dateInAWeek.setDate(dateInAWeek.getDate() + 14);\n\n  const handleTimeUpdate = value => {\n    setTime(value);\n  };\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  }\n\n  const getDiaryId = () => {\n    var formattedDate = formatDate(selectedDate);\n    fetch(`/get_diary/${doctor_id}/${formattedDate}`).then(res => res.json()).then(data => {\n      console.log(time);\n\n      for (var i = 0; i < data.length; i++) {\n        // look for the entry with a matching `code` value\n        if (data[i].time_slot == time.value) {\n          setDiaryId(data.diary_id);\n        }\n      }\n\n      console.log(data);\n    });\n    console.log(\"diaryId\", diaryId);\n  };\n\n  console.log(diaryId);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Your appointment with Dr. \", doctor_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Please select the date of your appointment\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: selectedDate,\n    onChange: date => setSelectedDate(date),\n    dateFormat: \"dd/MM/yyyy\",\n    minDate: today_date,\n    maxDate: dateInAWeek,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), selectedDate && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Please select a time\"), /*#__PURE__*/React.createElement(TimeDropdown, {\n    onChosenTime: handleTimeUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    onClick: getDiaryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Submit!\"))));\n};\n\nexport default DropdownContainer;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/BookingContainer/BookingContainer.jsx"],"names":["React","useState","useEffect","TimeDropdown","DatePicker","DropdownContainer","props","doctor_id","user","doctor_name","selectedDate","setSelectedDate","time","setTime","diaryId","setDiaryId","today_date","Date","dateInAWeek","setDate","getDate","handleTimeUpdate","value","formatDate","date","d","month","getMonth","day","year","getFullYear","length","join","getDiaryId","formattedDate","fetch","then","res","json","data","console","log","i","time_slot","diary_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./BookingContainer.css\";\nimport TimeDropdown from \"../TimeDropdown/TimeDropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DropdownContainer = (props) => {\n  const { doctor_id, user, doctor_name } = props;\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [diaryId, setDiaryId] = useState(null);\n\n  // Setting Date\n  var today_date = new Date();\n  var dateInAWeek = new Date();\n  dateInAWeek.setDate(dateInAWeek.getDate() + 14);\n\n  const handleTimeUpdate = (value) => {\n    setTime(value);\n  };\n\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  }\n\n  const getDiaryId = () => {\n    var formattedDate = formatDate(selectedDate);\n    fetch(`/get_diary/${doctor_id}/${formattedDate}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(time);\n        for (var i = 0; i < data.length; i++) {\n          // look for the entry with a matching `code` value\n          if (data[i].time_slot == time.value) {\n            setDiaryId(data.diary_id);\n          }\n        }\n\n        console.log(data);\n      });\n    console.log(\"diaryId\", diaryId);\n  };\n\n  console.log(diaryId);\n  return (\n    <div className=\"time-select\">\n      <h3>Your appointment with Dr. {doctor_name}</h3>\n      <div className=\"date-selection\">\n        <h5>Please select the date of your appointment</h5>\n        <DatePicker\n          selected={selectedDate}\n          onChange={(date) => setSelectedDate(date)}\n          dateFormat=\"dd/MM/yyyy\"\n          minDate={today_date}\n          maxDate={dateInAWeek}\n        ></DatePicker>\n        {selectedDate && (\n          <>\n            <>\n              <h5>Please select a time</h5>\n              <TimeDropdown onChosenTime={handleTimeUpdate}></TimeDropdown>\n            </>\n            <button className=\"submit-button\" onClick={getDiaryId}>\n              Submit!\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DropdownContainer;\n"]},"metadata":{},"sourceType":"module"}