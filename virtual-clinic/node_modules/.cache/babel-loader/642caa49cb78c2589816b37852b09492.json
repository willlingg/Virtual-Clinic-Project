{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/TimeDropdown/TimeDropdown.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nconst TimeDropdown = props => {\n  const [time, setTime] = useState(null);\n  const [timeSlots, setTimeSlots] = useState(null);\n  useEffect(() => {\n    fetch(\"/get_diary/2/2020-07-27\").then(res => res.json()).then(data => {\n      // Need to check if available\n      const timeSlots = data.map(diary => diary.time_slot);\n      setTimeSlots(timeSlots);\n    });\n  }, []);\n  const options = [];\n\n  if (timeSlots !== null) {\n    timeSlots.forEach((timeslot, index) => {\n      return options[index] = {\n        key: index,\n        text: timeslot,\n        value: timeslot\n      };\n    });\n  }\n\n  const handleChange = (_e, {\n    value\n  }) => {\n    setTime({\n      value\n    });\n    props.onChosenTime({\n      value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    placeholder: \"Select choice\",\n    options: options,\n    onChange: handleChange,\n    selection: true,\n    scrolling: true,\n    clearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TimeDropdown;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/TimeDropdown/TimeDropdown.jsx"],"names":["React","useEffect","useState","Dropdown","TimeDropdown","props","time","setTime","timeSlots","setTimeSlots","fetch","then","res","json","data","map","diary","time_slot","options","forEach","timeslot","index","key","text","value","handleChange","_e","onChosenTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,yBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACA,YAAMN,SAAS,GAAGM,IAAI,CAACC,GAAL,CAAUC,KAAD,IAAWA,KAAK,CAACC,SAA1B,CAAlB;AACAR,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMU,OAAO,GAAG,EAAhB;;AAEA,MAAIV,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,CAACW,OAAV,CAAkB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACrC,aAAQH,OAAO,CAACG,KAAD,CAAP,GAAiB;AACvBC,QAAAA,GAAG,EAAED,KADkB;AAEvBE,QAAAA,IAAI,EAAEH,QAFiB;AAGvBI,QAAAA,KAAK,EAAEJ;AAHgB,OAAzB;AAKD,KAND;AAOD;;AAED,QAAMK,YAAY,GAAG,CAACC,EAAD,EAAK;AAAEF,IAAAA;AAAF,GAAL,KAAmB;AACtCjB,IAAAA,OAAO,CAAC;AAAEiB,MAAAA;AAAF,KAAD,CAAP;AACAnB,IAAAA,KAAK,CAACsB,YAAN,CAAmB;AAAEH,MAAAA;AAAF,KAAnB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,QAAQ,EAAEO,YAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,SAAS,MALX;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CA3CD;;AA6CA,eAAerB,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nconst TimeDropdown = (props) => {\n  const [time, setTime] = useState(null);\n  const [timeSlots, setTimeSlots] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/get_diary/2/2020-07-27\")\n      .then((res) => res.json())\n      .then((data) => {\n        // Need to check if available\n        const timeSlots = data.map((diary) => diary.time_slot);\n        setTimeSlots(timeSlots);\n      });\n  }, []);\n\n  const options = [];\n\n  if (timeSlots !== null) {\n    timeSlots.forEach((timeslot, index) => {\n      return (options[index] = {\n        key: index,\n        text: timeslot,\n        value: timeslot,\n      });\n    });\n  }\n\n  const handleChange = (_e, { value }) => {\n    setTime({ value });\n    props.onChosenTime({ value });\n  };\n\n  return (\n    <div className=\"time-select\">\n      <Dropdown\n        placeholder=\"Select choice\"\n        options={options}\n        onChange={handleChange}\n        selection\n        scrolling\n        clearable\n      />\n    </div>\n  );\n};\n\nexport default TimeDropdown;\n"]},"metadata":{},"sourceType":"module"}