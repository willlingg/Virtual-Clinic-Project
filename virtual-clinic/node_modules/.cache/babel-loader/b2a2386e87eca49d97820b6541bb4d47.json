{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/PatientAppointments/PatientAppointments.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./PatientAppointments.css\";\n\nconst PatientAppointments = props => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n  const [modalPatientId, setModalPatientId] = useState(null);\n  const [modalPatientName, setModalPatientName] = useState(null);\n  const [documents, setDocuments] = useState(null);\n  const doctor_id = props.doctor_id;\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/appointment/doctor/${doctor_id}`);\n      let appointments = await appointmentQuery.json();\n      appointments.sort((a, b) => new Date(a.diary_date) - new Date(b.diary_date));\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n\n  const getPatientName = appointment => {\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, appointment.first_name, \" \", appointment.middle_name, \" \", appointment.last_name);\n  };\n\n  const getDate = appointment => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, date.join(\"/\"));\n  };\n\n  const getZoomUrl = appointment => {\n    const zoomUrl = appointment.start_url;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: zoomUrl,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, \"Click here to begin your consult\");\n  };\n\n  const deleteAppointment = appointment_id => {\n    fetch(\"/appointment\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id\n      })\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  async function getUploadedFiles(pat_id) {\n    try {\n      let response = await fetch(`/file/patient/${pat_id}`);\n      let documents = await response.json();\n      setDocuments(documents);\n      console.log(documents);\n      setDocumentLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  console.log(appointmentList);\n\n  if (ApptLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalIsOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Files for \", modalPatientName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setmodalIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"patient-appointment-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Please read carefully\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"If you wish to download any medical information or images uploaded by your patient such as X-rays or CAT scans, please do so by clicking the file name under the 'Uploaded Files' column.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"When it is time for your appointment, please click on the link underneath 'Zoom URL' to begin hosting your video appointment.\")), appointmentList.map(appointment => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"calendar-pic\",\n      src: \"calendar.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, getDate(appointment)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, appointment.time_from, \" - \", appointment.time_to))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Patient\"), getPatientName(appointment)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Uploaded Files\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        setmodalIsOpen(true);\n        setModalPatientId(appointment.patient_id);\n        setModalPatientName(appointment.first_name);\n        getUploadedFiles(appointment.patient_id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Click here for patient files\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Zoom URL\"), getZoomUrl(appointment)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Cancel appointment\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        deleteAppointment(appointment.diary_id); //   forceUpdate();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Cancel the appointment\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default PatientAppointments;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/PatientAppointments/PatientAppointments.jsx"],"names":["React","useState","useEffect","Modal","PatientAppointments","props","appointmentList","setAppointmentList","ApptLoaded","setApptLoaded","modalIsOpen","setmodalIsOpen","modalPatientId","setModalPatientId","modalPatientName","setModalPatientName","documents","setDocuments","doctor_id","getAppointments","appointmentQuery","fetch","appointments","json","sort","a","b","Date","diary_date","getPatientName","appointment","first_name","middle_name","last_name","getDate","dateArray","split","date","slice","join","getZoomUrl","zoomUrl","start_url","deleteAppointment","appointment_id","method","headers","Accept","body","JSON","stringify","patient_id","diary_id","then","response","window","location","reload","getUploadedFiles","pat_id","console","log","setDocumentLoaded","err","map","time_from","time_to"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./PatientAppointments.css\";\n\nconst PatientAppointments = (props) => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n  const [modalPatientId, setModalPatientId] = useState(null);\n  const [modalPatientName, setModalPatientName] = useState(null);\n  const [documents, setDocuments] = useState(null);\n\n  const doctor_id = props.doctor_id;\n\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/appointment/doctor/${doctor_id}`);\n      let appointments = await appointmentQuery.json();\n      appointments.sort(\n        (a, b) => new Date(a.diary_date) - new Date(b.diary_date)\n      );\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n    }\n\n    getAppointments();\n  }, []);\n\n  const getPatientName = (appointment) => {\n    return (\n      <h3>\n        {appointment.first_name} {appointment.middle_name}{\" \"}\n        {appointment.last_name}\n      </h3>\n    );\n  };\n\n  const getDate = (appointment) => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    return <div>{date.join(\"/\")}</div>;\n  };\n\n  const getZoomUrl = (appointment) => {\n    const zoomUrl = appointment.start_url;\n    return (\n      <a href={zoomUrl} target=\"_blank\">\n        Click here to begin your consult\n      </a>\n    );\n  };\n\n  const deleteAppointment = (appointment_id) => {\n    fetch(\"/appointment\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id,\n      }),\n    }).then((response) => {\n      window.location.reload();\n    });\n  };\n\n  async function getUploadedFiles(pat_id) {\n    try {\n      let response = await fetch(`/file/patient/${pat_id}`);\n      let documents = await response.json();\n      setDocuments(documents);\n      console.log(documents);\n      setDocumentLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  console.log(appointmentList);\n\n  if (ApptLoaded) {\n    return (\n      <div className=\"appointment-list\">\n        <Modal isOpen={modalIsOpen}>\n          <h2>Files for {modalPatientName}</h2>\n          <div>\n            <button onClick={() => setmodalIsOpen(false)}>Close</button>\n          </div>\n        </Modal>\n        <div className=\"patient-appointment-intro\">\n          <h2>Please read carefully</h2>\n          <p>\n            If you wish to download any medical information or images uploaded\n            by your patient such as X-rays or CAT scans, please do so by\n            clicking the file name under the 'Uploaded Files' column.\n          </p>\n          <p>\n            When it is time for your appointment, please click on the link\n            underneath 'Zoom URL' to begin hosting your video appointment.\n          </p>\n        </div>\n        {appointmentList.map((appointment) => (\n          <div className=\"appointment-container\">\n            <div className=\"calendar-container\">\n              <img className=\"calendar-pic\" src=\"calendar.png\"></img>\n              <div className=\"appointment-box\">\n                <h2>{getDate(appointment)}</h2>\n                <h3>\n                  {appointment.time_from} - {appointment.time_to}\n                </h3>\n              </div>\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Patient</h2>\n              {getPatientName(appointment)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Uploaded Files</h2>\n              <button\n                onClick={() => {\n                  setmodalIsOpen(true);\n                  setModalPatientId(appointment.patient_id);\n                  setModalPatientName(appointment.first_name);\n                  getUploadedFiles(appointment.patient_id);\n                }}\n              >\n                Click here for patient files\n              </button>\n            </div>\n\n            <div className=\"appointment-box\">\n              <h2>Zoom URL</h2>\n              {getZoomUrl(appointment)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Cancel appointment</h2>\n              <button\n                onClick={() => {\n                  deleteAppointment(appointment.diary_id);\n                  //   forceUpdate();\n                }}\n              >\n                Cancel the appointment\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default PatientAppointments;\n"]},"metadata":{},"sourceType":"module"}