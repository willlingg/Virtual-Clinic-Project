{"ast":null,"code":"import _includes from \"lodash/includes\";\nimport _findIndex from \"lodash/findIndex\";\nimport _reduce from \"lodash/reduce\";\nimport getMenuOptions from './getMenuOptions';\nexport default function getSelectedIndex(config) {\n  var additionLabel = config.additionLabel,\n      additionPosition = config.additionPosition,\n      allowAdditions = config.allowAdditions,\n      deburr = config.deburr,\n      multiple = config.multiple,\n      options = config.options,\n      search = config.search,\n      searchQuery = config.searchQuery,\n      selectedIndex = config.selectedIndex,\n      value = config.value;\n  var menuOptions = getMenuOptions({\n    value: value,\n    options: options,\n    searchQuery: searchQuery,\n    additionLabel: additionLabel,\n    additionPosition: additionPosition,\n    allowAdditions: allowAdditions,\n    deburr: deburr,\n    multiple: multiple,\n    search: search\n  });\n\n  var enabledIndicies = _reduce(menuOptions, function (memo, item, index) {\n    if (!item.disabled) memo.push(index);\n    return memo;\n  }, []);\n\n  var newSelectedIndex; // update the selected index\n\n  if (!selectedIndex || selectedIndex < 0) {\n    var firstIndex = enabledIndicies[0]; // Select the currently active item, if none, use the first item.\n    // Multiple selects remove active items from the list,\n    // their initial selected index should be 0.\n\n    newSelectedIndex = multiple ? firstIndex : _findIndex(menuOptions, ['value', value]) || enabledIndicies[0];\n  } else if (multiple) {\n    // multiple selects remove options from the menu as they are made active\n    // keep the selected index within range of the remaining items\n    if (selectedIndex >= menuOptions.length - 1) {\n      newSelectedIndex = enabledIndicies[enabledIndicies.length - 1];\n    }\n  } else {\n    var activeIndex = _findIndex(menuOptions, ['value', value]); // regular selects can only have one active item\n    // set the selected index to the currently active item\n\n\n    newSelectedIndex = _includes(enabledIndicies, activeIndex) ? activeIndex : undefined;\n  }\n\n  if (!newSelectedIndex || newSelectedIndex < 0) {\n    newSelectedIndex = enabledIndicies[0];\n  }\n\n  return newSelectedIndex;\n}","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/node_modules/semantic-ui-react/dist/es/modules/Dropdown/utils/getSelectedIndex.js"],"names":["_includes","_findIndex","_reduce","getMenuOptions","getSelectedIndex","config","additionLabel","additionPosition","allowAdditions","deburr","multiple","options","search","searchQuery","selectedIndex","value","menuOptions","enabledIndicies","memo","item","index","disabled","push","newSelectedIndex","firstIndex","length","activeIndex","undefined"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,eAAe,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC/C,MAAIC,aAAa,GAAGD,MAAM,CAACC,aAA3B;AAAA,MACIC,gBAAgB,GAAGF,MAAM,CAACE,gBAD9B;AAAA,MAEIC,cAAc,GAAGH,MAAM,CAACG,cAF5B;AAAA,MAGIC,MAAM,GAAGJ,MAAM,CAACI,MAHpB;AAAA,MAIIC,QAAQ,GAAGL,MAAM,CAACK,QAJtB;AAAA,MAKIC,OAAO,GAAGN,MAAM,CAACM,OALrB;AAAA,MAMIC,MAAM,GAAGP,MAAM,CAACO,MANpB;AAAA,MAOIC,WAAW,GAAGR,MAAM,CAACQ,WAPzB;AAAA,MAQIC,aAAa,GAAGT,MAAM,CAACS,aAR3B;AAAA,MASIC,KAAK,GAAGV,MAAM,CAACU,KATnB;AAUA,MAAIC,WAAW,GAAGb,cAAc,CAAC;AAC/BY,IAAAA,KAAK,EAAEA,KADwB;AAE/BJ,IAAAA,OAAO,EAAEA,OAFsB;AAG/BE,IAAAA,WAAW,EAAEA,WAHkB;AAI/BP,IAAAA,aAAa,EAAEA,aAJgB;AAK/BC,IAAAA,gBAAgB,EAAEA,gBALa;AAM/BC,IAAAA,cAAc,EAAEA,cANe;AAO/BC,IAAAA,MAAM,EAAEA,MAPuB;AAQ/BC,IAAAA,QAAQ,EAAEA,QARqB;AAS/BE,IAAAA,MAAM,EAAEA;AATuB,GAAD,CAAhC;;AAYA,MAAIK,eAAe,GAAGf,OAAO,CAACc,WAAD,EAAc,UAAUE,IAAV,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6B;AACtE,QAAI,CAACD,IAAI,CAACE,QAAV,EAAoBH,IAAI,CAACI,IAAL,CAAUF,KAAV;AACpB,WAAOF,IAAP;AACD,GAH4B,EAG1B,EAH0B,CAA7B;;AAKA,MAAIK,gBAAJ,CA5B+C,CA4BzB;;AAEtB,MAAI,CAACT,aAAD,IAAkBA,aAAa,GAAG,CAAtC,EAAyC;AACvC,QAAIU,UAAU,GAAGP,eAAe,CAAC,CAAD,CAAhC,CADuC,CACF;AACrC;AACA;;AAEAM,IAAAA,gBAAgB,GAAGb,QAAQ,GAAGc,UAAH,GAAgBvB,UAAU,CAACe,WAAD,EAAc,CAAC,OAAD,EAAUD,KAAV,CAAd,CAAV,IAA6CE,eAAe,CAAC,CAAD,CAAvG;AACD,GAND,MAMO,IAAIP,QAAJ,EAAc;AACnB;AACA;AACA,QAAII,aAAa,IAAIE,WAAW,CAACS,MAAZ,GAAqB,CAA1C,EAA6C;AAC3CF,MAAAA,gBAAgB,GAAGN,eAAe,CAACA,eAAe,CAACQ,MAAhB,GAAyB,CAA1B,CAAlC;AACD;AACF,GANM,MAMA;AACL,QAAIC,WAAW,GAAGzB,UAAU,CAACe,WAAD,EAAc,CAAC,OAAD,EAAUD,KAAV,CAAd,CAA5B,CADK,CACwD;AAC7D;;;AAGAQ,IAAAA,gBAAgB,GAAGvB,SAAS,CAACiB,eAAD,EAAkBS,WAAlB,CAAT,GAA0CA,WAA1C,GAAwDC,SAA3E;AACD;;AAED,MAAI,CAACJ,gBAAD,IAAqBA,gBAAgB,GAAG,CAA5C,EAA+C;AAC7CA,IAAAA,gBAAgB,GAAGN,eAAe,CAAC,CAAD,CAAlC;AACD;;AAED,SAAOM,gBAAP;AACD","sourcesContent":["import _includes from \"lodash/includes\";\nimport _findIndex from \"lodash/findIndex\";\nimport _reduce from \"lodash/reduce\";\nimport getMenuOptions from './getMenuOptions';\nexport default function getSelectedIndex(config) {\n  var additionLabel = config.additionLabel,\n      additionPosition = config.additionPosition,\n      allowAdditions = config.allowAdditions,\n      deburr = config.deburr,\n      multiple = config.multiple,\n      options = config.options,\n      search = config.search,\n      searchQuery = config.searchQuery,\n      selectedIndex = config.selectedIndex,\n      value = config.value;\n  var menuOptions = getMenuOptions({\n    value: value,\n    options: options,\n    searchQuery: searchQuery,\n    additionLabel: additionLabel,\n    additionPosition: additionPosition,\n    allowAdditions: allowAdditions,\n    deburr: deburr,\n    multiple: multiple,\n    search: search\n  });\n\n  var enabledIndicies = _reduce(menuOptions, function (memo, item, index) {\n    if (!item.disabled) memo.push(index);\n    return memo;\n  }, []);\n\n  var newSelectedIndex; // update the selected index\n\n  if (!selectedIndex || selectedIndex < 0) {\n    var firstIndex = enabledIndicies[0]; // Select the currently active item, if none, use the first item.\n    // Multiple selects remove active items from the list,\n    // their initial selected index should be 0.\n\n    newSelectedIndex = multiple ? firstIndex : _findIndex(menuOptions, ['value', value]) || enabledIndicies[0];\n  } else if (multiple) {\n    // multiple selects remove options from the menu as they are made active\n    // keep the selected index within range of the remaining items\n    if (selectedIndex >= menuOptions.length - 1) {\n      newSelectedIndex = enabledIndicies[enabledIndicies.length - 1];\n    }\n  } else {\n    var activeIndex = _findIndex(menuOptions, ['value', value]); // regular selects can only have one active item\n    // set the selected index to the currently active item\n\n\n    newSelectedIndex = _includes(enabledIndicies, activeIndex) ? activeIndex : undefined;\n  }\n\n  if (!newSelectedIndex || newSelectedIndex < 0) {\n    newSelectedIndex = enabledIndicies[0];\n  }\n\n  return newSelectedIndex;\n}"]},"metadata":{},"sourceType":"module"}