{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/BookingContainer/BookingContainer.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./BookingContainer.css\";\nimport TimeDropdown from \"../TimeDropdown/TimeDropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DropdownContainer = props => {\n  const {\n    doctor_id,\n    user,\n    doctor_name\n  } = props;\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [diaryId, setDiaryId] = useState(null);\n  const [submitted, setSubmitted] = useState(false); // Setting Date\n\n  var today_date = new Date();\n  var dateInAWeek = new Date();\n  dateInAWeek.setDate(dateInAWeek.getDate() + 14);\n  var formattedDate = formatDate(selectedDate);\n\n  const handleTimeUpdate = value => {\n    setTime(value);\n  };\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  }\n\n  const getDiaryId = () => {\n    var formattedDate = formatDate(selectedDate);\n\n    if (time) {\n      fetch(`/get_diary/${doctor_id}/${formattedDate}`).then(res => res.json()).then(data => {\n        for (var i = 0; i < data.length; i++) {\n          // look for the entry with a matching `code` value\n          if (data[i].time_slot === time.value) {\n            setDiaryId(data[i].diary_id);\n          }\n        }\n      });\n    }\n  };\n\n  const submitAppointment = () => {\n    fetch(\"/insert_booking\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: diaryId\n      })\n    }).then(response => {\n      if (response.status === 201) {\n        setSubmitted(true);\n      }\n    });\n  };\n\n  console.log(diaryId);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Your appointment with Dr. \", doctor_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Please select the date of your appointment\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: selectedDate,\n    onChange: date => {\n      setSelectedDate(date);\n    },\n    dateFormat: \"dd/MM/yyyy\",\n    minDate: today_date,\n    maxDate: dateInAWeek,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), selectedDate && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Please select a time\"), /*#__PURE__*/React.createElement(TimeDropdown, {\n    selectedDate: formatDate(selectedDate),\n    onChosenTime: handleTimeUpdate,\n    onChange: getDiaryId(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    onClick: submitAppointment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Submit!\")), submitted && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Your appointment with Dr. \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 39\n    }\n  }, doctor_name), \" has been succesfully booked on \", formattedDate, \" at \", time.value)));\n};\n\nexport default DropdownContainer;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/BookingContainer/BookingContainer.jsx"],"names":["React","useState","useEffect","TimeDropdown","DatePicker","DropdownContainer","props","doctor_id","user","doctor_name","selectedDate","setSelectedDate","time","setTime","diaryId","setDiaryId","submitted","setSubmitted","today_date","Date","dateInAWeek","setDate","getDate","formattedDate","formatDate","handleTimeUpdate","value","date","d","month","getMonth","day","year","getFullYear","length","join","getDiaryId","fetch","then","res","json","data","i","time_slot","diary_id","submitAppointment","method","headers","Accept","body","JSON","stringify","patient_id","response","status","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./BookingContainer.css\";\nimport TimeDropdown from \"../TimeDropdown/TimeDropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DropdownContainer = (props) => {\n  const { doctor_id, user, doctor_name } = props;\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [diaryId, setDiaryId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  // Setting Date\n  var today_date = new Date();\n  var dateInAWeek = new Date();\n  dateInAWeek.setDate(dateInAWeek.getDate() + 14);\n\n  var formattedDate = formatDate(selectedDate);\n\n  const handleTimeUpdate = (value) => {\n    setTime(value);\n  };\n\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [year, month, day].join(\"-\");\n  }\n\n  const getDiaryId = () => {\n    var formattedDate = formatDate(selectedDate);\n    if (time) {\n      fetch(`/get_diary/${doctor_id}/${formattedDate}`)\n        .then((res) => res.json())\n        .then((data) => {\n          for (var i = 0; i < data.length; i++) {\n            // look for the entry with a matching `code` value\n            if (data[i].time_slot === time.value) {\n              setDiaryId(data[i].diary_id);\n            }\n          }\n        });\n    }\n  };\n\n  const submitAppointment = () => {\n    fetch(\"/insert_booking\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: diaryId,\n      }),\n    }).then((response) => {\n      if (response.status === 201) {\n        setSubmitted(true);\n      }\n    });\n  };\n\n  console.log(diaryId);\n  return (\n    <div className=\"time-select\">\n      <h3>Your appointment with Dr. {doctor_name}</h3>\n      <div className=\"date-selection\">\n        <h5>Please select the date of your appointment</h5>\n        <DatePicker\n          selected={selectedDate}\n          onChange={(date) => {\n            setSelectedDate(date);\n          }}\n          dateFormat=\"dd/MM/yyyy\"\n          minDate={today_date}\n          maxDate={dateInAWeek}\n        ></DatePicker>\n        {selectedDate && (\n          <>\n            <>\n              <h5>Please select a time</h5>\n              <TimeDropdown\n                selectedDate={formatDate(selectedDate)}\n                onChosenTime={handleTimeUpdate}\n                onChange={getDiaryId()}\n              ></TimeDropdown>\n            </>\n            <button className=\"submit-button\" onClick={submitAppointment}>\n              Submit!\n            </button>\n          </>\n        )}\n        {submitted && (\n          <div className=\"submit\">\n            Your appointment with Dr. <strong>{doctor_name}</strong> has been\n            succesfully booked on {formattedDate} at {time.value}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DropdownContainer;\n"]},"metadata":{},"sourceType":"module"}