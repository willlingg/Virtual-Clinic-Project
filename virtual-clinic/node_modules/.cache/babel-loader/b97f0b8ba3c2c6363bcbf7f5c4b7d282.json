{"ast":null,"code":"var _jsxFileName = \"/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/PatientAppointments/PatientAppointments.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./PatientAppointments.css\";\n\nconst PatientAppointments = props => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [docLoaded, setDocLoaded] = useState(false);\n  const doctor_id = props.doctor_id;\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(`/doctor/get_appointments/${doctor_id}/`);\n      let appointments = await appointmentQuery.json();\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n      console.log(appointments);\n    }\n\n    getAppointments();\n  }, []); //   useEffect(() => {\n  //     async function getDoctors() {\n  //       try {\n  //         let docResponse = await fetch(\"/get_doctors\");\n  //         let doctors = await docResponse.json();\n  //         setDoctorList(doctors);\n  //         setDocLoaded(true);\n  //       } catch (err) {\n  //         console.log(err);\n  //       }\n  //     }\n  //     getDoctors();\n  //   }, []);\n\n  const getDoctorName = doctor_id => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }, \"Dr. \", doctorList[i].first_name, \" \", doctorList[i].last_name);\n      }\n    }\n  };\n\n  const getDate = appointment => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    var day = dateArray[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }, date.join(\"/\"));\n  };\n\n  const getZoomUrl = appointment => {\n    const zoomUrl = appointment.videoconference_url;\n    console.log(\"http://\" + zoomUrl);\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://\" + zoomUrl,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, \"Click here to begin your appointment\");\n  };\n\n  const deleteAppointment = appointment_id => {\n    fetch(\"/delete_booking\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id\n      })\n    }).then(response => {\n      window.location.reload();\n    });\n  };\n\n  console.log(appointmentList);\n\n  if (ApptLoaded && docLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"patient-appointment-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Please read carefully\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"If you wish to upload any medical information or images such as X-rays or CAT scans, please do so by clicking the 'Upload Files' button and attaching the files you wish to provide the Practitioner\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"When it is time for your appointment, please click on the link underneath 'Zoom URL' to begin your video appointment.\")), appointmentList.map(appointment => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"calendar-pic\",\n      src: \"calendar.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, getDate(appointment)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, appointment.time_from, \" - \", appointment.time_to))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"Practitioner\"), getDoctorName(appointment.doctor_id)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Zoom URL\"), getZoomUrl(appointment)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Cancel appointment\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        deleteAppointment(appointment.diary_id); //   forceUpdate();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"Cancel your appointment\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nexport default PatientAppointments;","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/src/Components/PatientAppointments/PatientAppointments.jsx"],"names":["React","useState","useEffect","PatientAppointments","props","appointmentList","setAppointmentList","doctorList","setDoctorList","ApptLoaded","setApptLoaded","docLoaded","setDocLoaded","doctor_id","getAppointments","appointmentQuery","fetch","appointments","json","console","log","getDoctorName","i","length","first_name","last_name","getDate","appointment","dateArray","diary_date","split","date","slice","day","join","getZoomUrl","zoomUrl","videoconference_url","deleteAppointment","appointment_id","method","headers","Accept","body","JSON","stringify","patient_id","diary_id","then","response","window","location","reload","map","time_from","time_to"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./PatientAppointments.css\";\n\nconst PatientAppointments = (props) => {\n  const [appointmentList, setAppointmentList] = useState(null);\n  const [doctorList, setDoctorList] = useState(null);\n  const [ApptLoaded, setApptLoaded] = useState(false);\n  const [docLoaded, setDocLoaded] = useState(false);\n\n  const doctor_id = props.doctor_id;\n\n  useEffect(() => {\n    async function getAppointments() {\n      let appointmentQuery = await fetch(\n        `/doctor/get_appointments/${doctor_id}/`\n      );\n      let appointments = await appointmentQuery.json();\n      setAppointmentList(appointments);\n      setApptLoaded(true);\n      console.log(appointments);\n    }\n\n    getAppointments();\n  }, []);\n\n  //   useEffect(() => {\n  //     async function getDoctors() {\n  //       try {\n  //         let docResponse = await fetch(\"/get_doctors\");\n  //         let doctors = await docResponse.json();\n  //         setDoctorList(doctors);\n  //         setDocLoaded(true);\n  //       } catch (err) {\n  //         console.log(err);\n  //       }\n  //     }\n  //     getDoctors();\n  //   }, []);\n\n  const getDoctorName = (doctor_id) => {\n    for (var i = 0; i < doctorList.length; i++) {\n      if (doctorList[i].doctor_id === doctor_id) {\n        return (\n          <h3>\n            Dr. {doctorList[i].first_name} {doctorList[i].last_name}\n          </h3>\n        );\n      }\n    }\n  };\n\n  const getDate = (appointment) => {\n    const dateArray = appointment.diary_date.split(\" \");\n    const date = dateArray.slice(1, 4);\n    var day = dateArray[0];\n    return <div>{date.join(\"/\")}</div>;\n  };\n\n  const getZoomUrl = (appointment) => {\n    const zoomUrl = appointment.videoconference_url;\n    console.log(\"http://\" + zoomUrl);\n    return (\n      <a href={\"http://\" + zoomUrl} target=\"_blank\">\n        Click here to begin your appointment\n      </a>\n    );\n  };\n\n  const deleteAppointment = (appointment_id) => {\n    fetch(\"/delete_booking\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        patient_id: 1,\n        diary_id: appointment_id,\n      }),\n    }).then((response) => {\n      window.location.reload();\n    });\n  };\n\n  console.log(appointmentList);\n\n  if (ApptLoaded && docLoaded) {\n    return (\n      <div className=\"appointment-list\">\n        <div className=\"patient-appointment-intro\">\n          <h2>Please read carefully</h2>\n          <p>\n            If you wish to upload any medical information or images such as\n            X-rays or CAT scans, please do so by clicking the 'Upload Files'\n            button and attaching the files you wish to provide the Practitioner\n          </p>\n          <p>\n            When it is time for your appointment, please click on the link\n            underneath 'Zoom URL' to begin your video appointment.\n          </p>\n        </div>\n        {appointmentList.map((appointment) => (\n          <div className=\"appointment-container\">\n            <div className=\"calendar-container\">\n              <img className=\"calendar-pic\" src=\"calendar.png\"></img>\n              <div className=\"time-details\">\n                <h2>{getDate(appointment)}</h2>\n                <h3>\n                  {appointment.time_from} - {appointment.time_to}\n                </h3>\n              </div>\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Practitioner</h2>\n              {getDoctorName(appointment.doctor_id)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Zoom URL</h2>\n              {getZoomUrl(appointment)}\n            </div>\n            <div className=\"appointment-box\">\n              <h2>Cancel appointment</h2>\n              <button\n                onClick={() => {\n                  deleteAppointment(appointment.diary_id);\n                  //   forceUpdate();\n                }}\n              >\n                Cancel your appointment\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default PatientAppointments;\n"]},"metadata":{},"sourceType":"module"}