{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _startsWith from \"lodash/startsWith\";\nimport _filter from \"lodash/filter\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _keys from \"lodash/keys\";\nimport _intersection from \"lodash/intersection\";\nimport _has from \"lodash/has\";\nimport _each from \"lodash/each\";\nimport _invoke from \"lodash/invoke\";\nimport React from 'react';\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return \"default\".concat(prop[0].toUpperCase() + prop.slice(1));\n};\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\n\n\nvar getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false; // regular props\n\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp; // initial state - state may be null or undefined\n\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  } // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n\n\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : ''; // otherwise, undefined\n};\n\nvar ModernAutoControlledComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModernAutoControlledComponent, _React$Component);\n\n  function ModernAutoControlledComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModernAutoControlledComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModernAutoControlledComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    var _this$constructor = _this.constructor,\n        autoControlledProps = _this$constructor.autoControlledProps,\n        getAutoControlledStateFromProps = _this$constructor.getAutoControlledStateFromProps;\n    var state = _invoke(_assertThisInitialized(_this), 'getInitialAutoControlledState', _this.props) || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor2 = _this.constructor,\n          defaultProps = _this$constructor2.defaultProps,\n          name = _this$constructor2.name,\n          propTypes = _this$constructor2.propTypes,\n          getDerivedStateFromProps = _this$constructor2.getDerivedStateFromProps; // require usage of getAutoControlledStateFromProps()\n\n      if (getDerivedStateFromProps !== ModernAutoControlledComponent.getDerivedStateFromProps) {\n        /* eslint-disable-next-line no-console */\n        console.error(\"Auto controlled \".concat(name, \" must specify a static getAutoControlledStateFromProps() instead of getDerivedStateFromProps().\"));\n      } // require propTypes\n\n\n      _each(autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop); // regular prop\n\n        if (!_has(propTypes, defaultProp)) {\n          console.error(\"\".concat(name, \" is missing \\\"\").concat(defaultProp, \"\\\" propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        } // its default prop\n\n\n        if (!_has(propTypes, prop)) {\n          console.error(\"\".concat(name, \" is missing propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        }\n      }); // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n\n\n      var illegalDefaults = _intersection(autoControlledProps, _keys(defaultProps));\n\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', \"See \".concat(name, \" props: \\\"\").concat(illegalDefaults, \"\\\".\")].join(' '));\n      } // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n\n\n      var illegalAutoControlled = _filter(autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', \"See \".concat(name, \" autoControlledProps: \\\"\").concat(illegalAutoControlled, \"\\\".\")].join(' '));\n      }\n    } // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n\n\n    var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, state, true);\n\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name; // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(\"\".concat(_name, \" prop \\\"\").concat(prop, \"\\\" is auto controlled. Specify either \").concat(defaultPropName, \" or \").concat(prop, \", but not both.\"));\n        }\n      }\n\n      return acc;\n    }, {});\n    _this.state = _objectSpread({}, state, initialAutoControlledState, {\n      autoControlledProps: autoControlledProps,\n      getAutoControlledStateFromProps: getAutoControlledStateFromProps\n    });\n    return _this;\n  }\n\n  _createClass(ModernAutoControlledComponent, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var autoControlledProps = state.autoControlledProps,\n          getAutoControlledStateFromProps = state.getAutoControlledStateFromProps; // Solve the next state for autoControlledProps\n\n      var newStateFromProps = autoControlledProps.reduce(function (acc, prop) {\n        var isNextDefined = !_isUndefined(props[prop]); // if next is defined then use its value\n\n        if (isNextDefined) acc[prop] = props[prop];\n        return acc;\n      }, {}); // Due to the inheritance of the AutoControlledComponent we should call its\n      // getAutoControlledStateFromProps() and merge it with the existing state\n\n      if (getAutoControlledStateFromProps) {\n        var computedState = getAutoControlledStateFromProps(props, _objectSpread({}, state, newStateFromProps), state); // We should follow the idea of getDerivedStateFromProps() and return only modified state\n\n        return _objectSpread({}, newStateFromProps, computedState);\n      }\n\n      return newStateFromProps;\n    }\n    /**\n     * Override this method to use getDerivedStateFromProps() in child components.\n     */\n\n  }, {\n    key: \"getAutoControlledStateFromProps\",\n    value: function getAutoControlledStateFromProps() {\n      return null;\n    }\n  }]);\n\n  return ModernAutoControlledComponent;\n}(React.Component);\n\nexport { ModernAutoControlledComponent as default };","map":{"version":3,"sources":["/Users/williamling/Documents/UNI/POST_GRAD/Year 2/Term 2/9323 Porject/virtual-clinic/node_modules/semantic-ui-react/dist/es/lib/ModernAutoControlledComponent.js"],"names":["_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_isUndefined","_startsWith","_filter","_isEmpty","_keys","_intersection","_has","_each","_invoke","React","getDefaultPropName","prop","concat","toUpperCase","slice","getAutoControlledStateValue","propName","props","state","includeDefaults","arguments","length","undefined","propValue","defaultProp","initialState","multiple","ModernAutoControlledComponent","_React$Component","_getPrototypeOf2","_this","_len","args","Array","_key","call","apply","_this$constructor","constructor","autoControlledProps","getAutoControlledStateFromProps","process","env","NODE_ENV","_this$constructor2","defaultProps","name","propTypes","getDerivedStateFromProps","console","error","illegalDefaults","join","illegalAutoControlled","initialAutoControlledState","reduce","acc","defaultPropName","_name","key","value","newStateFromProps","isNextDefined","computedState","Component","default"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,0BAAP,MAAuC,kDAAvC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AACzD,SAAO,UAAUC,MAAV,CAAiBD,IAAI,CAAC,CAAD,CAAJ,CAAQE,WAAR,KAAwBF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAzC,CAAP;AACD,CAFD;AAGA;;;;;;;;;;;;;;;;AAgBA,IAAIC,2BAA2B,GAAG,SAASA,2BAAT,CAAqCC,QAArC,EAA+CC,KAA/C,EAAsDC,KAAtD,EAA6D;AAC7F,MAAIC,eAAe,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA1F,CAD6F,CAE7F;;AACA,MAAIG,SAAS,GAAGN,KAAK,CAACD,QAAD,CAArB;AACA,MAAIO,SAAS,KAAKD,SAAlB,EAA6B,OAAOC,SAAP;;AAE7B,MAAIJ,eAAJ,EAAqB;AACnB;AACA,QAAIK,WAAW,GAAGP,KAAK,CAACP,kBAAkB,CAACM,QAAD,CAAnB,CAAvB;AACA,QAAIQ,WAAW,KAAKF,SAApB,EAA+B,OAAOE,WAAP,CAHZ,CAGgC;;AAEnD,QAAIN,KAAJ,EAAW;AACT,UAAIO,YAAY,GAAGP,KAAK,CAACF,QAAD,CAAxB;AACA,UAAIS,YAAY,KAAKH,SAArB,EAAgC,OAAOG,YAAP;AACjC;AACF,GAf4F,CAe3F;AACF;;;AAGA,MAAIT,QAAQ,KAAK,SAAjB,EAA4B,OAAO,KAAP;AAC5B,MAAIA,QAAQ,KAAK,OAAjB,EAA0B,OAAOC,KAAK,CAACS,QAAN,GAAiB,EAAjB,GAAsB,EAA7B,CApBmE,CAoBlC;AAC5D,CArBD;;AAuBA,IAAIC,6BAA6B,GACjC,aACA,UAAUC,gBAAV,EAA4B;AAC1B7B,EAAAA,SAAS,CAAC4B,6BAAD,EAAgCC,gBAAhC,CAAT;;AAEA,WAASD,6BAAT,GAAyC;AACvC,QAAIE,gBAAJ;;AAEA,QAAIC,KAAJ;;AAEApC,IAAAA,eAAe,CAAC,IAAD,EAAOiC,6BAAP,CAAf;;AAEA,SAAK,IAAII,IAAI,GAAGX,SAAS,CAACC,MAArB,EAA6BW,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAad,SAAS,CAACc,IAAD,CAAtB;AACD;;AAEDJ,IAAAA,KAAK,GAAGlC,0BAA0B,CAAC,IAAD,EAAO,CAACiC,gBAAgB,GAAGhC,eAAe,CAAC8B,6BAAD,CAAnC,EAAoEQ,IAApE,CAAyEC,KAAzE,CAA+EP,gBAA/E,EAAiG,CAAC,IAAD,EAAOjB,MAAP,CAAcoB,IAAd,CAAjG,CAAP,CAAlC;AACA,QAAIK,iBAAiB,GAAGP,KAAK,CAACQ,WAA9B;AAAA,QACIC,mBAAmB,GAAGF,iBAAiB,CAACE,mBAD5C;AAAA,QAEIC,+BAA+B,GAAGH,iBAAiB,CAACG,+BAFxD;AAGA,QAAItB,KAAK,GAAGV,OAAO,CAACV,sBAAsB,CAACgC,KAAD,CAAvB,EAAgC,+BAAhC,EAAiEA,KAAK,CAACb,KAAvE,CAAP,IAAwF,EAApG;;AAEA,QAAIwB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIC,kBAAkB,GAAGd,KAAK,CAACQ,WAA/B;AAAA,UACIO,YAAY,GAAGD,kBAAkB,CAACC,YADtC;AAAA,UAEIC,IAAI,GAAGF,kBAAkB,CAACE,IAF9B;AAAA,UAGIC,SAAS,GAAGH,kBAAkB,CAACG,SAHnC;AAAA,UAIIC,wBAAwB,GAAGJ,kBAAkB,CAACI,wBAJlD,CADyC,CAKmC;;AAE5E,UAAIA,wBAAwB,KAAKrB,6BAA6B,CAACqB,wBAA/D,EAAyF;AACvF;AACAC,QAAAA,OAAO,CAACC,KAAR,CAAc,mBAAmBtC,MAAnB,CAA0BkC,IAA1B,EAAgC,iGAAhC,CAAd;AACD,OAVwC,CAUvC;;;AAGFvC,MAAAA,KAAK,CAACgC,mBAAD,EAAsB,UAAU5B,IAAV,EAAgB;AACzC,YAAIa,WAAW,GAAGd,kBAAkB,CAACC,IAAD,CAApC,CADyC,CACG;;AAE5C,YAAI,CAACL,IAAI,CAACyC,SAAD,EAAYvB,WAAZ,CAAT,EAAmC;AACjCyB,UAAAA,OAAO,CAACC,KAAR,CAAc,GAAGtC,MAAH,CAAUkC,IAAV,EAAgB,gBAAhB,EAAkClC,MAAlC,CAAyCY,WAAzC,EAAsD,qDAAtD,EAA6GZ,MAA7G,CAAoHD,IAApH,EAA0H,KAA1H,CAAd;AACD,SALwC,CAKvC;;;AAGF,YAAI,CAACL,IAAI,CAACyC,SAAD,EAAYpC,IAAZ,CAAT,EAA4B;AAC1BsC,UAAAA,OAAO,CAACC,KAAR,CAAc,GAAGtC,MAAH,CAAUkC,IAAV,EAAgB,8DAAhB,EAAgFlC,MAAhF,CAAuFD,IAAvF,EAA6F,KAA7F,CAAd;AACD;AACF,OAXI,CAAL,CAbyC,CAwBrC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,UAAIwC,eAAe,GAAG9C,aAAa,CAACkC,mBAAD,EAAsBnC,KAAK,CAACyC,YAAD,CAA3B,CAAnC;;AAEA,UAAI,CAAC1C,QAAQ,CAACgD,eAAD,CAAb,EAAgC;AAC9BF,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,0EAAD,EAA6E,uEAA7E,EAAsJ,8EAAtJ,EAAsO,OAAOtC,MAAP,CAAckC,IAAd,EAAoB,YAApB,EAAkClC,MAAlC,CAAyCuC,eAAzC,EAA0D,KAA1D,CAAtO,EAAwSC,IAAxS,CAA6S,GAA7S,CAAd;AACD,OAxCwC,CAwCvC;AACF;AACA;AACA;;;AAGA,UAAIC,qBAAqB,GAAGnD,OAAO,CAACqC,mBAAD,EAAsB,UAAU5B,IAAV,EAAgB;AACvE,eAAOV,WAAW,CAACU,IAAD,EAAO,SAAP,CAAlB;AACD,OAFkC,CAAnC;;AAIA,UAAI,CAACR,QAAQ,CAACkD,qBAAD,CAAb,EAAsC;AACpCJ,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,kDAAD,EAAqD,0CAArD,EAAiG,OAAOtC,MAAP,CAAckC,IAAd,EAAoB,0BAApB,EAAgDlC,MAAhD,CAAuDyC,qBAAvD,EAA8E,KAA9E,CAAjG,EAAuLD,IAAvL,CAA4L,GAA5L,CAAd;AACD;AACF,KAtEsC,CAsErC;AACF;AACA;AACA;;;AAGA,QAAIE,0BAA0B,GAAGf,mBAAmB,CAACgB,MAApB,CAA2B,UAAUC,GAAV,EAAe7C,IAAf,EAAqB;AAC/E6C,MAAAA,GAAG,CAAC7C,IAAD,CAAH,GAAYI,2BAA2B,CAACJ,IAAD,EAAOmB,KAAK,CAACb,KAAb,EAAoBC,KAApB,EAA2B,IAA3B,CAAvC;;AAEA,UAAIuB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAIc,eAAe,GAAG/C,kBAAkB,CAACC,IAAD,CAAxC;AACA,YAAI+C,KAAK,GAAG5B,KAAK,CAACQ,WAAN,CAAkBQ,IAA9B,CAFyC,CAEL;;AAEpC,YAAI,CAAC9C,YAAY,CAAC8B,KAAK,CAACb,KAAN,CAAYwC,eAAZ,CAAD,CAAb,IAA+C,CAACzD,YAAY,CAAC8B,KAAK,CAACb,KAAN,CAAYN,IAAZ,CAAD,CAAhE,EAAqF;AACnFsC,UAAAA,OAAO,CAACC,KAAR,CAAc,GAAGtC,MAAH,CAAU8C,KAAV,EAAiB,UAAjB,EAA6B9C,MAA7B,CAAoCD,IAApC,EAA0C,wCAA1C,EAAoFC,MAApF,CAA2F6C,eAA3F,EAA4G,MAA5G,EAAoH7C,MAApH,CAA2HD,IAA3H,EAAiI,iBAAjI,CAAd;AACD;AACF;;AAED,aAAO6C,GAAP;AACD,KAbgC,EAa9B,EAb8B,CAAjC;AAcA1B,IAAAA,KAAK,CAACZ,KAAN,GAAczB,aAAa,CAAC,EAAD,EAAKyB,KAAL,EAAYoC,0BAAZ,EAAwC;AACjEf,MAAAA,mBAAmB,EAAEA,mBAD4C;AAEjEC,MAAAA,+BAA+B,EAAEA;AAFgC,KAAxC,CAA3B;AAIA,WAAOV,KAAP;AACD;;AAEDnC,EAAAA,YAAY,CAACgC,6BAAD,EAAgC,IAAhC,EAAsC,CAAC;AACjDgC,IAAAA,GAAG,EAAE,0BAD4C;AAEjDC,IAAAA,KAAK,EAAE,SAASZ,wBAAT,CAAkC/B,KAAlC,EAAyCC,KAAzC,EAAgD;AACrD,UAAIqB,mBAAmB,GAAGrB,KAAK,CAACqB,mBAAhC;AAAA,UACIC,+BAA+B,GAAGtB,KAAK,CAACsB,+BAD5C,CADqD,CAEwB;;AAE7E,UAAIqB,iBAAiB,GAAGtB,mBAAmB,CAACgB,MAApB,CAA2B,UAAUC,GAAV,EAAe7C,IAAf,EAAqB;AACtE,YAAImD,aAAa,GAAG,CAAC9D,YAAY,CAACiB,KAAK,CAACN,IAAD,CAAN,CAAjC,CADsE,CACtB;;AAEhD,YAAImD,aAAJ,EAAmBN,GAAG,CAAC7C,IAAD,CAAH,GAAYM,KAAK,CAACN,IAAD,CAAjB;AACnB,eAAO6C,GAAP;AACD,OALuB,EAKrB,EALqB,CAAxB,CAJqD,CAS7C;AACR;;AAEA,UAAIhB,+BAAJ,EAAqC;AACnC,YAAIuB,aAAa,GAAGvB,+BAA+B,CAACvB,KAAD,EAAQxB,aAAa,CAAC,EAAD,EAAKyB,KAAL,EAAY2C,iBAAZ,CAArB,EAAqD3C,KAArD,CAAnD,CADmC,CAC6E;;AAEhH,eAAOzB,aAAa,CAAC,EAAD,EAAKoE,iBAAL,EAAwBE,aAAxB,CAApB;AACD;;AAED,aAAOF,iBAAP;AACD;AACD;;;;AAtBiD,GAAD,EA0B/C;AACDF,IAAAA,GAAG,EAAE,iCADJ;AAEDC,IAAAA,KAAK,EAAE,SAASpB,+BAAT,GAA2C;AAChD,aAAO,IAAP;AACD;AAJA,GA1B+C,CAAtC,CAAZ;;AAiCA,SAAOb,6BAAP;AACD,CAtID,CAsIElB,KAAK,CAACuD,SAtIR,CAFA;;AA0IA,SAASrC,6BAA6B,IAAIsC,OAA1C","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _startsWith from \"lodash/startsWith\";\nimport _filter from \"lodash/filter\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _keys from \"lodash/keys\";\nimport _intersection from \"lodash/intersection\";\nimport _has from \"lodash/has\";\nimport _each from \"lodash/each\";\nimport _invoke from \"lodash/invoke\";\nimport React from 'react';\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return \"default\".concat(prop[0].toUpperCase() + prop.slice(1));\n};\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\n\n\nvar getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // regular props\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp; // initial state - state may be null or undefined\n\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  } // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n\n\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : ''; // otherwise, undefined\n};\n\nvar ModernAutoControlledComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModernAutoControlledComponent, _React$Component);\n\n  function ModernAutoControlledComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModernAutoControlledComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModernAutoControlledComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    var _this$constructor = _this.constructor,\n        autoControlledProps = _this$constructor.autoControlledProps,\n        getAutoControlledStateFromProps = _this$constructor.getAutoControlledStateFromProps;\n    var state = _invoke(_assertThisInitialized(_this), 'getInitialAutoControlledState', _this.props) || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor2 = _this.constructor,\n          defaultProps = _this$constructor2.defaultProps,\n          name = _this$constructor2.name,\n          propTypes = _this$constructor2.propTypes,\n          getDerivedStateFromProps = _this$constructor2.getDerivedStateFromProps; // require usage of getAutoControlledStateFromProps()\n\n      if (getDerivedStateFromProps !== ModernAutoControlledComponent.getDerivedStateFromProps) {\n        /* eslint-disable-next-line no-console */\n        console.error(\"Auto controlled \".concat(name, \" must specify a static getAutoControlledStateFromProps() instead of getDerivedStateFromProps().\"));\n      } // require propTypes\n\n\n      _each(autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop); // regular prop\n\n        if (!_has(propTypes, defaultProp)) {\n          console.error(\"\".concat(name, \" is missing \\\"\").concat(defaultProp, \"\\\" propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        } // its default prop\n\n\n        if (!_has(propTypes, prop)) {\n          console.error(\"\".concat(name, \" is missing propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        }\n      }); // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n\n\n      var illegalDefaults = _intersection(autoControlledProps, _keys(defaultProps));\n\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', \"See \".concat(name, \" props: \\\"\").concat(illegalDefaults, \"\\\".\")].join(' '));\n      } // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n\n\n      var illegalAutoControlled = _filter(autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', \"See \".concat(name, \" autoControlledProps: \\\"\").concat(illegalAutoControlled, \"\\\".\")].join(' '));\n      }\n    } // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n\n\n    var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, state, true);\n\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name; // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(\"\".concat(_name, \" prop \\\"\").concat(prop, \"\\\" is auto controlled. Specify either \").concat(defaultPropName, \" or \").concat(prop, \", but not both.\"));\n        }\n      }\n\n      return acc;\n    }, {});\n    _this.state = _objectSpread({}, state, initialAutoControlledState, {\n      autoControlledProps: autoControlledProps,\n      getAutoControlledStateFromProps: getAutoControlledStateFromProps\n    });\n    return _this;\n  }\n\n  _createClass(ModernAutoControlledComponent, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var autoControlledProps = state.autoControlledProps,\n          getAutoControlledStateFromProps = state.getAutoControlledStateFromProps; // Solve the next state for autoControlledProps\n\n      var newStateFromProps = autoControlledProps.reduce(function (acc, prop) {\n        var isNextDefined = !_isUndefined(props[prop]); // if next is defined then use its value\n\n        if (isNextDefined) acc[prop] = props[prop];\n        return acc;\n      }, {}); // Due to the inheritance of the AutoControlledComponent we should call its\n      // getAutoControlledStateFromProps() and merge it with the existing state\n\n      if (getAutoControlledStateFromProps) {\n        var computedState = getAutoControlledStateFromProps(props, _objectSpread({}, state, newStateFromProps), state); // We should follow the idea of getDerivedStateFromProps() and return only modified state\n\n        return _objectSpread({}, newStateFromProps, computedState);\n      }\n\n      return newStateFromProps;\n    }\n    /**\n     * Override this method to use getDerivedStateFromProps() in child components.\n     */\n\n  }, {\n    key: \"getAutoControlledStateFromProps\",\n    value: function getAutoControlledStateFromProps() {\n      return null;\n    }\n  }]);\n\n  return ModernAutoControlledComponent;\n}(React.Component);\n\nexport { ModernAutoControlledComponent as default };"]},"metadata":{},"sourceType":"module"}